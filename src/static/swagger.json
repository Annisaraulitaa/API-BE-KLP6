{
  "openapi": "3.0.0",
  "info": {
    "description": "PSM API Documentation",
    "version": "1.0.0",
    "title": "PSM API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "PSM API",
      "description": "API Documentation"
    },
    {
      "name": "Admin",
      "description": "Admin related endpoints"
    },
    {
      "name": "User",
      "description": "User related endpoints"
    },
    {
      "name": "News",
      "description": "News related endpoints"
    },
    {
      "name": "Event",
      "description": "Event related endpoints"
    },
    {
      "name": "Achievement",
      "description": "Achievement related endpoints"
    },
    {
      "name": "Gallery",
      "description": "Gallery related endpoints"
    },
    {
      "name": "Structure",
      "description": "Structure related endpoints"
    },
    {
      "name": "Token",
      "description": "Token related endpoints"
    }
  ],
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "components": {
    "schemas": {
      "Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "updated_at": {
            "type": "number"
          },
          "created_at": {
            "type": "number"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "photo_url": {
            "type": "string"
          },
          "role_id": {
            "type": "string"
          },
          "role_text": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "number"
          },
          "created_at": {
            "type": "number"
          }
        }
      },
      "News": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "photo_url": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "number"
          },
          "created_at": {
            "type": "number"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "photo_url": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "number"
          },
          "created_at": {
            "type": "number"
          }
        }
      },
      "Achievement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "photo_url": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "number"
          },
          "created_at": {
            "type": "number"
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AchievementCountry"
            }
          }
        }
      },
      "AchievementCountry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "type": "number"
          },
          "created_at": {
            "type": "number"
          }
        }
      },
      "Gallery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "photo_url": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "updated_at": {
            "type": "number"
          },
          "created_at": {
            "type": "number"
          }
        }
      }
    }
  },
  "paths": {
    "/achievements/": {
      "get": {
        "tags": [
          "Achievement"
        ],
        "summary": "Get all achievements",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Achievement"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Achievement"
        ],
        "summary": "Create a new achievement",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "photo": {
                    "type": "string"
                  },
                  "place": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "content",
                  "year",
                  "photo"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Achievement created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Achievement"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/achievements/{achievement_id}": {
      "put": {
        "tags": [
          "Achievement"
        ],
        "summary": "Update an achievement",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "achievement_id",
            "in": "path",
            "required": true,
            "description": "ID of the achievement to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "year": {
                    "type": "integer"
                  },
                  "photo": {
                    "type": "string"
                  },
                  "place": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Achievement updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "msg": {
                        "type": "string"
                      },
                      "data": {
                        "$ref": "#/components/schemas/Achievement"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "msg": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Achievement"
        ],
        "summary": "Delete an achievement",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "achievement_id",
            "in": "path",
            "required": true,
            "description": "ID of the achievement to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Achievement deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Achievement"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Achievement"
        ],
        "summary": "Get a specific achievement",
        "parameters": [
          {
            "name": "achievement_id",
            "in": "path",
            "required": true,
            "description": "ID of the achievement to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Achievement"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Login for admin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    },
                    "refresh_token": {
                      "type": "string"
                    },
                    "access_token": {
                      "type": "string"
                    },
                    "admin": {
                      "$ref": "#/components/schemas/Admin"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/register": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Register new admin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Admin"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/change-password": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Change admin password",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string"
                  },
                  "new_password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "401": {
            "description": "Invalid current password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/create-user": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create new user",
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "photo": {
                    "type": "string"
                  },
                  "role_id": {
                    "type": "string"
                  },
                  "role_text": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/update-user/{user_id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update user",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "photo": {
                    "type": "string"
                  },
                  "role_id": {
                    "type": "string"
                  },
                  "role_text": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/delete-user/{user_id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete user",
        "security": [
          {
            "jwt": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "ID of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gallery/": {
      "get": {
        "tags": [
          "Gallery"
        ],
        "summary": "Get all gallery items",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Gallery"
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "pages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Gallery"
        ],
        "summary": "Create new gallery item",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Gallery created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gallery"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/gallery/{gallery_id}": {
      "get": {
        "tags": [
          "Gallery"
        ],
        "summary": "Get gallery item by ID",
        "parameters": [
          {
            "name": "gallery_id",
            "in": "path",
            "description": "ID of the gallery item to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gallery"
                }
              }
            }
          },
          "404": {
            "description": "Gallery not found"
          }
        }
      },
      "put": {
        "tags": [
          "Gallery"
        ],
        "summary": "Update gallery item by ID",
        "parameters": [
          {
            "name": "gallery_id",
            "in": "path",
            "description": "ID of the gallery item to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Gallery updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gallery"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Gallery not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Gallery"
        ],
        "summary": "Delete gallery item by ID",
        "parameters": [
          {
            "name": "gallery_id",
            "in": "path",
            "description": "ID of the gallery item to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gallery deleted successfully"
          },
          "404": {
            "description": "Gallery not found"
          }
        }
      }
    },
    "/home/": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Get data for the home page",
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "gallery": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Gallery"
                      }
                    },
                    "news": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/News"
                      }
                    },
                    "achievement_count": {
                      "type": "integer"
                    },
                    "country_count": {
                      "type": "integer"
                    },
                    "user_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/news/": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get paginated list of news articles",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/News"
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "pages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/news/{news_id}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get a news article by ID",
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "description": "ID of the news article to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "404": {
            "description": "News not found"
          }
        }
      },
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create a new news article",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NewsFormData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "News created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "400": {
            "description": "Title, content, and photo are required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Update an existing news article",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "description": "ID of the news article to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NewsFormData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "News updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "404": {
            "description": "News not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a news article by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "news_id",
            "in": "path",
            "description": "ID of the news article to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          },
          "404": {
            "description": "News not found"
          }
        }
      }
    },
    "/structure/": {
      "get": {
        "tags": [
          "Structure"
        ],
        "summary": "Get the structure of organization",
        "responses": {
          "200": {
            "description": "Structure retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Refresh user token",
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Newly generated access token"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "Newly generated refresh token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User login",
        "responses": {
          "201": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "Message indicating successful login"
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "Refresh token for user"
                    },
                    "access_token": {
                      "type": "string",
                      "description": "Access token for user"
                    },
                    "user": {
                      "type": "object",
                      "description": "User data",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "User name"
                        },
                        "email": {
                          "type": "string",
                          "description": "User email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "User phone number"
                        },
                        "address": {
                          "type": "string",
                          "description": "User address"
                        },
                        "photo_url": {
                          "type": "string",
                          "description": "URL of user's profile photo"
                        },
                        "created_at": {
                          "type": "integer",
                          "description": "Timestamp indicating user creation time"
                        },
                        "updated_at": {
                          "type": "integer",
                          "description": "Timestamp indicating user update time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user profile",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "Message indicating successful profile update"
                    },
                    "data": {
                      "type": "object",
                      "description": "Updated user data",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "User name"
                        },
                        "email": {
                          "type": "string",
                          "description": "User email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "User phone number"
                        },
                        "address": {
                          "type": "string",
                          "description": "User address"
                        },
                        "photo_url": {
                          "type": "string",
                          "description": "URL of user's profile photo"
                        },
                        "created_at": {
                          "type": "integer",
                          "description": "Timestamp indicating user creation time"
                        },
                        "updated_at": {
                          "type": "integer",
                          "description": "Timestamp indicating user update time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "User data",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "name": {
                          "type": "string",
                          "description": "User name"
                        },
                        "email": {
                          "type": "string",
                          "description": "User email"
                        },
                        "phone": {
                          "type": "string",
                          "description": "User phone number"
                        },
                        "address": {
                          "type": "string",
                          "description": "User address"
                        },
                        "photo_url": {
                          "type": "string",
                          "description": "URL of user's profile photo"
                        },
                        "created_at": {
                          "type": "integer",
                          "description": "Timestamp indicating user creation time"
                        },
                        "updated_at": {
                          "type": "integer",
                          "description": "Timestamp indicating user update time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get all events",
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Create a new event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/event/{id}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get event by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Update event",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Delete event",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the event to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted successfully"
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}